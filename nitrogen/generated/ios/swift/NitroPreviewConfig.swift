///
/// NitroPreviewConfig.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `NitroPreviewConfig`, backed by a C++ struct.
 */
public typealias NitroPreviewConfig = margelo.nitro.multipleimagepicker.NitroPreviewConfig

public extension NitroPreviewConfig {
  private typealias bridge = margelo.nitro.multipleimagepicker.bridge.swift

  /**
   * Create a new instance of `NitroPreviewConfig`.
   */
  init(language: Language, videoAutoPlay: Bool?) {
    self.init(language, { () -> bridge.std__optional_bool_ in
      if let __unwrappedValue = videoAutoPlay {
        return bridge.create_std__optional_bool_(__unwrappedValue)
      } else {
        return .init()
      }
    }())
  }

  var language: Language {
    @inline(__always)
    get {
      return self.__language
    }
    @inline(__always)
    set {
      self.__language = newValue
    }
  }
  
  var videoAutoPlay: Bool? {
    @inline(__always)
    get {
      return self.__videoAutoPlay.value
    }
    @inline(__always)
    set {
      self.__videoAutoPlay = { () -> bridge.std__optional_bool_ in
        if let __unwrappedValue = newValue {
          return bridge.create_std__optional_bool_(__unwrappedValue)
        } else {
          return .init()
        }
      }()
    }
  }
}
